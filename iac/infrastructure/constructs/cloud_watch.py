from constructs import Construct
from cdktf_cdktf_provider_aws.cloudwatch_log_group import CloudwatchLogGroup


class CloudWatchConstruct(Construct):
    """
    A Construct for creating CloudWatch Log Groups for monitoring ECS services.

    This construct sets up CloudWatch Log Groups that enable centralized logging and monitoring for ECS services.
    CloudWatch Log Groups store the logs generated by ECS services.

    Attributes:
        keycloak_log_group (CloudwatchLogGroup): Log group for the Keycloak service.
        streamlit_log_group (CloudwatchLogGroup): Log group for the Streamlit service.

    Parameters:
        scope (Construct): The scope in which this construct is defined.
        id (str): The unique identifier of the construct.
        project_prefix (str): A prefix for project-related resource names to ensure uniqueness.
        environment (str): The environment name (e.g., `production`, `staging`) to differentiate resources.
        tags (dict): A dictionary of tags to apply to all resources created by this construct.

    Methods:
        __init__(self, scope, id, ...): Initializes the CloudWatch log groups for the Keycloak and Streamlit services.
    """

    def __init__(
        self,
        scope: Construct,
        id: str,
        *,
        project_prefix: str,
        environment: str,
        tags: dict,
    ) -> None:
        super().__init__(scope, id)

        resource_prefix = f"{project_prefix}-{environment}"

        # Create log groups for each service
        self.keycloak_log_group = CloudwatchLogGroup(
            self,
            "keycloak-logs",
            name=f"/ecs/{resource_prefix}-keycloak",
            retention_in_days=30,
            tags=tags,
        )

        self.streamlit_log_group = CloudwatchLogGroup(
            self,
            "streamlit-logs",
            name=f"/ecs/{resource_prefix}-streamlit",
            retention_in_days=30,
            tags=tags,
        )
